/******************************************************************************
 *
 * INTEL CONFIDENTIAL
 *
 * Copyright 2022 Intel Corporation.
 *
 * This software and the related documents are Intel copyrighted materials, and
 * your use of them is governed by the express license under which they were
 * provided to you ("License"). Unless the License provides otherwise, you may
 * not use, modify, copy, publish, distribute, disclose or transmit this
 * software or the related documents without Intel's prior written permission.
 *
 * This software and the related documents are provided as is, with no express
 * or implied warranties, other than those that are expressly stated in
 * the License.
 *
 ******************************************************************************/

#pragma once
#include <array>
#include <map>
#include <utility>
#include <vector>

#include "tor_defs.hpp"

const std::array<const char*, 34> SPR_PORT_ID = {
    "KTI0",
    "KTI1",
    "KTI2",
    "KTI3",
    "IMC0",
    "IMC1",
    "IMC2",
    "IMC3",
    "IMC4",
    "IMC5",
    "IMC6",
    "IMC7",
    "IAL0",
    "IAL1",
    "IAL2",
    "IAL3",
    "IAL4",
    "IAL5",
    "IAL6",
    "IAL7",
    "PCIE0",
    "PCIE1",
    "PCIE2",
    "PCIE3",
    "PCIE4",
    "PCIE5",
    "PCIE6",
    "PCIE7",
    "PCIE8",
    "PCIE9",
    "PCIE10",
    "PCIE11",
    "UBOX",
    "KTI4"
};

const std::array<const char *, 16> SPR_LLCS = {
    "not implemented",
    "SF_S",
    "SF_E",
    "SF_H",
    "not implemented",
    "not implemented",
    "not implemented",
    "not implemented",
    "LLC_I",
    "LLC_S",
    "LLC_E",
    "LLC_M",
    "LLC_F",
    "LLC_D",
    "not implemented",
    "LLC_P",
};

const std::map<uint8_t, uint8_t> SprfirstErrorCha = {
    {0x80, 0}, {0x81, 1}, {0x82, 2}, {0x83, 3}, {0x84, 4},
    {0x85, 5}, {0x86, 6}, {0x87, 7}, {0x88, 8}, {0x89, 9},
    {0x8a, 10}, {0x8b, 11}, {0x8c, 12}, {0x8d, 13}, {0x8e, 14},
    {0x8f, 15}, {0x90, 16}, {0x91, 17}, {0x92, 18}, {0x93, 19},
    {0x94, 20}, {0x95, 21}, {0x96, 22}, {0x97, 23}, {0x98, 24},
    {0x99, 25}, {0x9a, 26}, {0x9b, 27}, {0x9c, 28}, {0x9d, 29},
    {0x9e, 30}, {0x9f, 31}, {0xa0, 32}, {0xa1, 33}, {0xa2, 34},
    {0xa3, 35}, {0xa4, 36}, {0xa5, 37}, {0xa6, 38}, {0xa7, 39},
    {0xa8, 40}, {0xa9, 41}, {0xaa, 42}, {0xab, 43}, {0xac, 44},
    {0xad, 45}, {0xae, 46}, {0xaf, 47}, {0xb0, 48}, {0xb1, 49},
    {0xb2, 50}, {0xb3, 51}, {0xb4, 52}, {0xb5, 53}, {0xb6, 54},
    {0xb7, 55}, {0xb8, 56}, {0xb9, 57}, {0xba, 58}, {0xbb, 59},
    {0xbc, 60}, {0xbd, 61}, {0xbe, 62}, {0xbf, 63}, {0xc0, 64},
    {0xc1, 65}, {0xc2, 66}, {0xc3, 67}, {0xc4, 68}, {0xc5, 69},
    {0xc6, 70}, {0xc7, 71},
};

const std::map<uint16_t, const char*> SprfirstError = {
    {0x0 , "Core0, bank 0-3"},
    {0x1 , "Core1, bank 0-3"},
    {0x2 , "Core2, bank 0-3"},
    {0x3 , "Core3, bank 0-3"},
    {0x4 , "Core4, bank 0-3"},
    {0x5 , "Core5, bank 0-3"},
    {0x6 , "Core6, bank 0-3"},
    {0x7 , "Core7, bank 0-3"},
    {0x8 , "Core8, bank 0-3"},
    {0x9 , "Core9, bank 0-3"},
    {0xA , "Core10, bank 0-3"},
    {0xB , "Core11, bank 0-3"},
    {0xC , "Core12, bank 0-3"},
    {0xD , "Core13, bank 0-3"},
    {0xE , "Core14, bank 0-3"},
    {0xF , "Core15, bank 0-3"},
    {0x10, "Core16, bank 0-3"},
    {0x11, "Core17, bank 0-3"},
    {0x12, "Core18, bank 0-3"},
    {0x13, "Core19, bank 0-3"},
    {0x14, "Core20, bank 0-3"},
    {0x15, "Core21, bank 0-3"},
    {0x16, "Core22, bank 0-3"},
    {0x17, "Core23, bank 0-3"},
    {0x18, "Core24, bank 0-3"},
    {0x19, "Core25, bank 0-3"},
    {0x1A, "Core26, bank 0-3"},
    {0x1B, "Core27, bank 0-3"},
    {0x1C, "Core28, bank 0-3"},
    {0x1D, "Core29, bank 0-3"},
    {0x1E, "Core30, bank 0-3"},
    {0x1F, "Core31, bank 0-3"},
    {0x20, "Core32, bank 0-3"},
    {0x21, "Core33, bank 0-3"},
    {0x22, "Core34, bank 0-3"},
    {0x23, "Core35, bank 0-3"},
    {0x24, "Core36, bank 0-3"},
    {0x25, "Core37, bank 0-3"},
    {0x26, "Core38, bank 0-3"},
    {0x27, "Core39, bank 0-3"},
    {0x28, "Core40, bank 0-3"},
    {0x29, "Core41, bank 0-3"},
    {0x2A, "Core42, bank 0-3"},
    {0x2B, "Core43, bank 0-3"},
    {0x2C, "Core44, bank 0-3"},
    {0x2D, "Core45, bank 0-3"},
    {0x2E, "Core46, bank 0-3"},
    {0x2F, "Core47, bank 0-3"},
    {0x30, "Core48, bank 0-3"},
    {0x31, "Core49, bank 0-3"},
    {0x32, "Core50, bank 0-3"},
    {0x33, "Core51, bank 0-3"},
    {0x34, "Core52, bank 0-3"},
    {0x35, "Core53, bank 0-3"},
    {0x36, "Core54, bank 0-3"},
    {0x37, "Core55, bank 0-3"},
    {0x38, "Core56, bank 0-3"},
    {0x39, "Core57, bank 0-3"},
    {0x3A, "Core58, bank 0-3"},
    {0x3B, "Core59, bank 0-3"},
    {0x3C, "Core60, bank 0-3"},
    {0x3D, "Core61, bank 0-3"},
    {0x3E, "Core62, bank 0-3"},
    {0x3F, "Core63, bank 0-3"},
    {0x40, "Core64, bank 0-3"},
    {0x41, "Core65, bank 0-3"},
    {0x42, "Core66, bank 0-3"},
    {0x43, "Core67, bank 0-3"},
    {0x44, "Core68, bank 0-3"},
    {0x45, "Core69, bank 0-3"},
    {0x46, "Core70, bank 0-3"},
    {0x47, "Core71, bank 0-3"},
    {0x80, "CHA0, bank 9"},
    {0x81, "CHA1, bank 10"},
    {0x82, "CHA2, bank 11"},
    {0x83, "CHA3, bank 9"},
    {0x84, "CHA4, bank 10"},
    {0x85, "CHA5, bank 11"},
    {0x86, "CHA6, bank 9"},
    {0x87, "CHA7, bank 10"},
    {0x88, "CHA8, bank 11"},
    {0x89, "CHA9, bank 9"},
    {0x8a, "CHA10, bank 10"},
    {0x8b, "CHA11, bank 11"},
    {0x8c, "CHA12, bank 9"},
    {0x8d, "CHA13, bank 10"},
    {0x8e, "CHA14, bank 11"},
    {0x8f, "CHA15, bank 9"},
    {0x90, "CHA16, bank 10"},
    {0x91, "CHA17, bank 11"},
    {0x92, "CHA18, bank 9"},
    {0x93, "CHA19, bank 10"},
    {0x94, "CHA20, bank 11"},
    {0x95, "CHA21, bank 9"},
    {0x96, "CHA22, bank 10"},
    {0x97, "CHA23, bank 11"},
    {0x98, "CHA24, bank 9"},
    {0x99, "CHA25, bank 10"},
    {0x9a, "CHA26, bank 11"},
    {0x9b, "CHA27, bank 9"},
    {0x9c, "CHA28, bank 10"},
    {0x9d, "CHA29, bank 11"},
    {0x9e, "CHA30, bank 9"},
    {0x9f, "CHA31, bank 10"},
    {0xa0, "CHA32, bank 11"},
    {0xa1, "CHA33, bank 9"},
    {0xa2, "CHA34, bank 10"},
    {0xa3, "CHA35, bank 11"},
    {0xa4, "CHA36, bank 9"},
    {0xa5, "CHA37, bank 10"},
    {0xa6, "CHA38, bank 11"},
    {0xa7, "CHA39, bank 9"},
    {0xa8, "CHA40, bank 10"},
    {0xa9, "CHA41, bank 11"},
    {0xaa, "CHA42, bank 9"},
    {0xab, "CHA43, bank 10"},
    {0xac, "CHA44, bank 11"},
    {0xad, "CHA45, bank 9"},
    {0xae, "CHA46, bank 10"},
    {0xaf, "CHA47, bank 11"},
    {0xb0, "CHA48, bank 9"},
    {0xb1, "CHA49, bank 10"},
    {0xb2, "CHA50, bank 11"},
    {0xb3, "CHA51, bank 9"},
    {0xb4, "CHA52, bank 10"},
    {0xb5, "CHA53, bank 11"},
    {0xb6, "CHA54, bank 9"},
    {0xb7, "CHA55, bank 10"},
    {0xb8, "CHA56, bank 11"},
    {0xb9, "CHA57, bank 9"},
    {0xba, "CHA58, bank 10"},
    {0xbb, "CHA59, bank 11"},
    {0xbc, "CHA60, bank 9"},
    {0xbd, "CHA61, bank 10"},
    {0xbe, "CHA62, bank 11"},
    {0xbf, "CHA63, bank 9"},
    {0xc0, "CHA64, bank 10"},
    {0xc1, "CHA65, bank 11"},
    {0xc2, "CHA66, bank 9"},
    {0xc3, "CHA67, bank 10"},
    {0xc4, "CHA68, bank 11"},
    {0xc5, "CHA69, bank 9"},
    {0xc6, "CHA70, bank 10"},
    {0xc7, "CHA71, bank 11"},
    {0x180, "PUNIT, bank 4"},
    {0x181, "PUNIT, bank 4"},
    {0x182, "PUNIT, bank 4"},
    {0x183, "PUNIT, bank 4"},
    {0x184, "PUNIT, bank 4"},
    {0x185, "PUNIT, bank 4"},
    {0x186, "OOBMSM"},
    {0x1cc, "UBOX, bank 6"},
    {0x1cd, "UBOX, bank 6"},
    {0x1ce, "UBOX, bank 6"},
    {0x1da, "OOBMSM"},
    {0x237, "PCIeg4_DMI_0, bank 6"},
    {0x238, "PCIeg4_0, bank 6"},
    {0x239, "PCIeg4_0, bank 6"},
    {0x23A, "PCIeg4_0, bank 6"},
    {0x23B, "PCIeg4_0, bank 6"},
    {0x23C, "PCIeg5_0, bank 6"},
    {0x23D, "PCIeg5_0, bank 6"},
    {0x23E, "PCIeg5_0, bank 6"},
    {0x23F, "PCIeg5_0, bank 6"},
    {0x24B, "PCIeg4_1, bank 6"},
    {0x24C, "PCIeg4_1, bank 6"},
    {0x24D, "PCIeg4_1, bank 6"},
    {0x24E, "PCIeg4_1, bank 6"},
    {0x24F, "PCIeg4_1, bank 6"},
    {0x250, "PCIeg5_1, bank 6"},
    {0x251, "PCIeg5_1, bank 6"},
    {0x252, "PCIeg5_1, bank 6"},
    {0x253, "PCIeg5_1, bank 6"},
    {0x25F, "PCIeg4_3, bank 6"},
    {0x260, "PCIeg4_3, bank 6"},
    {0x261, "PCIeg4_3, bank 6"},
    {0x262, "PCIeg4_3, bank 6"},
    {0x263, "PCIeg4_3, bank 6"},
    {0x264, "PCIeg5_3, bank 6"},
    {0x265, "PCIeg5_3, bank 6"},
    {0x266, "PCIeg5_3, bank 6"},
    {0x267, "PCIeg5_3, bank 6"},
    {0x273, "PCIeg4_5, bank 6"},
    {0x274, "PCIeg4_5, bank 6"},
    {0x275, "PCIeg4_5, bank 6"},
    {0x276, "PCIeg4_5, bank 6"},
    {0x277, "PCIeg4_5, bank 6"},
    {0x278, "PCIeg5_5, bank 6"},
    {0x279, "PCIeg5_5, bank 6"},
    {0x27A, "PCIeg5_5, bank 6"},
    {0x27B, "PCIeg5_5, bank 6"},
    {0x287, "PCIeg4_4, bank 6"},
    {0x288, "PCIeg4_4, bank 6"},
    {0x289, "PCIeg4_4, bank 6"},
    {0x28A, "PCIeg4_4, bank 6"},
    {0x28B, "PCIeg4_4, bank 6"},
    {0x28C, "PCIeg5_4, bank 6"},
    {0x28D, "PCIeg5_4, bank 6"},
    {0x28E, "PCIeg5_4, bank 6"},
    {0x28F, "PCIeg5_4, bank 6"},
    {0x29B, "PCIeg4_7, bank 6"},
    {0x29C, "PCIeg4_7, bank 6"},
    {0x29D, "PCIeg4_7, bank 6"},
    {0x29E, "PCIeg4_7, bank 6"},
    {0x29F, "PCIeg4_7, bank 6"},
    {0x2A0, "PCIeg5_7, bank 6"},
    {0x2A1, "PCIeg5_7, bank 6"},
    {0x2A2, "PCIeg5_7, bank 6"},
    {0x2A3, "PCIeg5_7, bank 6"},
    {0x2A6, "PCIeg4_2, bank 6"},
    {0x2A7, "PCIeg4_2, bank 6"},
    {0x2A8, "PCIeg4_2, bank 6"},
    {0x2A9, "PCIeg4_2, bank 6"},
    {0x2AA, "PCIeg4_2, bank 6"},
    {0x2AB, "PCIeg5_2, bank 6"},
    {0x2AC, "PCIeg5_2, bank 6"},
    {0x2E3, "PCIeg5_2, bank 6"},
    {0x2E4, "PCIeg5_2, bank 6"},
    {0x306, "PCIeg4_6, bank 6"},
    {0x307, "PCIeg4_6, bank 6"},
    {0x308, "PCIeg4_6, bank 6"},
    {0x309, "PCIeg4_6, bank 6"},
    {0x30A, "PCIeg4_6, bank 6"},
    {0x30B, "PCIeg5_6, bank 6"},
    {0x30C, "PCIeg5_6, bank 6"},
    {0x30D, "PCIeg5_6, bank 6"},
    {0x30E, "PCIeg5_6, bank 6"},
    {0x344, "UPI0, bank 5"},
    {0x345, "UPI0, bank 5"},
    {0x346, "UPI0, bank 5"},
    {0x347, "UPI0, bank 5"},
    {0x348, "UPI0, bank 5"},
    {0x34A, "UPI2, bank 5"},
    {0x34B, "UPI2, bank 5"},
    {0x34C, "UPI2, bank 5"},
    {0x34D, "UPI2, bank 5"},
    {0x34E, "UPI2, bank 5"},
    {0x350, "UPI1, bank 5"},
    {0x351, "UPI1, bank 5"},
    {0x352, "UPI1, bank 5"},
    {0x353, "UPI1, bank 5"},
    {0x354, "UPI1, bank 5"},
    {0x356, "UPI3, bank 5"},
    {0x357, "UPI3, bank 5"},
    {0x358, "UPI3, bank 5"},
    {0x359, "UPI3, bank 5"},
    {0x35A, "UPI3, bank 5"},
    {0x3BE, "M2MEM0, bank 12"},
    {0x3BF, "M2MEM1, bank 12"},
    {0x3C0, "M2MEM2, bank 12"},
    {0x3C1, "M2MEM3, bank 12"},
    {0x3C6, "MCDDR0, bank 13, 14"},
    {0x3C7, "MCDDR1, bank 15, 16"},
    {0x3C8, "MCDDR2, bank 17, 18"},
    {0x3C9, "MCDDR3, bank 19, 20"},
};

const std::map<uint32_t, const char*> SprOpCodeDecode = {
    {464, "NOP"},
    {257, "CRd"},
    {261, "CRd_UC"},
    {273, "CRd_Pref"},
    {270, "UCRdF"},
    {259, "SetMonitor"},
    {258, "DRd"},
    {274, "DRd_Pref"},
    {260, "DRd_Opt"},
    {276, "DRd_Opt_Pref"},
    {275, "DRd_NS"},
    {263, "PRd"},
    {262, "DRdPTE"},
    {256, "RFO"},
    {272, "RFO_Pref"},
    {287, "RFOWr"},
    {392, "ItoM"},
    {424, "ItoMCacheNear"},
    {394, "SpecItoM"},
    {393, "ItoMWr"},
    {395, "ItoMWr_WT"},
    {385, "ItoMWr_NS"},
    {407, "ItoMWR_WT_NS"},
    {397, "MemPushWr"},
    {413, "MemPushWr_NS"},
    {410, "PrefData"},
    {409, "PrefCode"},
    {408, "PrefRFO"},
    {388, "WbMtoI"},
    {389, "WbMtoE"},
    {390, "WbEFtoI"},
    {391, "WbEFtoE"},
    {404, "WbOtoI"},
    {405, "WbOtoE"},
    {396, "WbStoI"},
    {420, "WbPushHint"},
    {421, "WbPMPushHint"},
    {271, "WiL"},
    {269, "WCiL"},
    {268, "WCiLF"},
    {277, "WCiL_NS"},
    {278, "WCiLF_NS"},
    {329, "WbInvd"},
    {331, "LLCWB"},
    {345, "PMSeqInvd"},
    {328, "Invd"},
    {280, "CLFlush"},
    {265, "PCommit"},
    {456, "Enqueue"},
    {316, "CLCleanse"},
    {282, "CLFlush_Opt"},
    {284, "CLWB"},
    {384, "CLDemote"},
    {286, "RdCurr"},
    {285, "FsRdCur"},
    {317, "FsRdCurPtl"},
    {425, "RdCurrCacheNear"},
    {472, "CBO_EOI"},
    {475, "IntPriUp"},
    {473, "IntLog"},
    {474, "IntPhy"},
    {468, "IntA"},
    {479, "Lock"},
    {448, "SpCyc"},
    {478, "SplitLock"},
    {467, "Unlock"},
    {476, "PortIn"},
    {469, "PortOut"},
    {465, "ClrMonitor"},
    {1280, "KRdCur"},
    {1281, "KRdCode"},
    {1282, "KRdData"},
    {1283, "KRdDataMigratory"},
    {1284, "KRdInvOwn"},
    {1285, "KInvXtoI"},
    {1287, "KInvItoE"},
    {1295, "KInvItoM"},
    {1292, "KRdInvOwnE"},
    {1024, "KWbIData"},
    {1025, "KWbSData"},
    {1026, "KWbEData"},
    {1027, "KNonSnpWr"},
    {1036, "KEvctCln"},
    {1037, "KNonSnpRd"},
    {1028, "KWbIDataPtl"},
    {1030, "KWbEDataPtl"},
    {1031, "KNonSnpWrPtl"},
    {1032, "KWbPushMtoI"},
    {1035, "KWbFlush"},
    {1792, "SnpCur"},
    {1793, "SnpCode"},
    {1794, "SnpData"},
    {1795, "SnpDataMigratory"},
    {1796, "SnpInvOwn"},
    {1797, "SnpInvItoE"},
    {0, "RspI"},
    {1, "RspS"},
    {38, "RspV"},
    {2, "RspDataM"},
    {51, "RspIFwdMPtl"},
    {3, "RspIFwdM"},
    {35, "RspIFwdFE"},
    {36, "RspSFwdFE"},
    {50, "RspNack"},
    {39, "RspVFwdV"},
    {4, "PullData"},
    {52, "PullDataPtl"},
    {5, "PullDataBogus"},
    {6, "Cmp"},
    {7, "Cmp_FwdCode"},
    {8, "Cmp_FwdInvItoE"},
    {9, "Cmp_PullData"},
    {37, "FwdCnflt"},
    {11, "Cmp_FwdInvOwn"},
    {32, "DataC"},
    {30, "DataNC"},
    {12, "DataC_Cmp"},
    {16, "FakeCycle"},
    {27, "Victim"},
    {49, "LLCVictim"},
    {53, "MKTMEVictim"},
    {29, "GsrIsInMstate"},
    {48, "TOR_TimeOut"},
};
